{"Constants.html#/c:HBLibOpener.h@HBLOErrorDomain":{"name":"HBLOErrorDomain","abstract":"<p>Undocumented</p>"},"Classes/HBLibOpener.html#/c:objc(cs)HBLibOpener(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>Returns the shared instance of the HBLibOpener class.</p>","parent_name":"HBLibOpener"},"Classes/HBLibOpener.html#/c:objc(cs)HBLibOpener(im)registerHandler:error:":{"name":"-registerHandler:error:","abstract":"<p>Allows you to register a handler with libopener.</p>","parent_name":"HBLibOpener"},"Classes/HBLibOpener.html#/c:objc(cs)HBLibOpener(im)registerHandlerWithName:block:":{"name":"-registerHandlerWithName:block:","abstract":"<p>Raises an exception.</p>","parent_name":"HBLibOpener"},"Classes/HBLibOpener.html#/c:objc(cs)HBLibOpener(im)handlerIsEnabled:":{"name":"-handlerIsEnabled:","abstract":"<p>Returns whether a handler is enabled or disabled.</p>","parent_name":"HBLibOpener"},"Classes/HBLOHandler.html#/c:objc(cs)HBLOHandler(py)name":{"name":"name","abstract":"<p>Name of the handler, shown in Settings.</p>","parent_name":"HBLOHandler"},"Classes/HBLOHandler.html#/c:objc(cs)HBLOHandler(py)identifier":{"name":"identifier","abstract":"<p>Identifier of the handler, used internally by Opener.</p>","parent_name":"HBLOHandler"},"Classes/HBLOHandler.html#/c:objc(cs)HBLOHandler(py)preferencesBundle":{"name":"preferencesBundle","abstract":"<p>Custom Preferences list controller bundle.</p>","parent_name":"HBLOHandler"},"Classes/HBLOHandler.html#/c:objc(cs)HBLOHandler(py)preferencesClass":{"name":"preferencesClass","abstract":"<p>Custom Preferences list controller class.</p>","parent_name":"HBLOHandler"},"Classes/HBLOHandler.html#/c:objc(cs)HBLOHandler(im)openURL:sender:":{"name":"-openURL:sender:","abstract":"<p>Called when a URL is opened in order to check if your handler has an override of the URL.</p>","parent_name":"HBLOHandler"},"Classes/HBLOHandler.html":{"name":"HBLOHandler","abstract":"<p>A handler is a class that is consulted by Opener when the system is about to open a URL. If a"},"Classes/HBLibOpener.html":{"name":"HBLibOpener","abstract":"<p>The HBLibOpener class provides the ability to manually register a handler with Opener from a"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"}}